name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  Pipeline_exectuion:
    name: Pipeline_exectuion
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - run: echo "Pipeline submitted succeessfully"
   
  get_pipeline_arn:
    name: get_pipeline_run
    needs: Pipeline_exectuion
    runs-on: ubuntu-latest
    outputs:
      arn: ${{ steps.Fetch_Arn.outputs.value }}
    permissions:
      id-token: write
      contents: write
    steps:
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{secrets.roles }}
        aws-region: us-west-2
    - uses: actions/checkout@v2
    - id: Fetch_Arn
      name: Fetch SagemakerArn
      run: |
        echo "value=$(aws sagemaker list-pipeline-executions --pipeline-name AbalonePipeline --sort-by CreationTime --sort-order Descending --output json | jq .PipelineExecutionSummaries[].PipelineExecutionArn)" >> $GITHUB_OUTPUT
        echo ${{ steps.Fetch_Arn.outputs.value }}
    
  check_execution_status:
    name: Status check execution
    needs: get_pipeline_arn
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
    - run: echo ${{ needs.get_pipeline_arn.outputs.arn }}
    - run: echo ${{ github.run_id }}
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.roles }}
        aws-region: us-west-2
    - uses: actions/checkout@v2
    - name: check_on_Dynamodb
      run: |
         value=$(aws dynamodb execute-statement --statement "SELECT pipelineExecutionArn FROM execution_status WHERE pipelineExecutionArn='arn:aws:sagemaker:us-west-2:858958072653:pipeline/abalonepipeline/execution/er1qkmpvq7wa'"| jq '.Items[0] .pipelineExecutionArn .S')
         echo $value
         if [ -z "$value" ]; then
            aws dynamodb execute-statement --statement "INSERT INTO execution_status VALUE {'pipelineExecutionArn':'arn:aws:sagemaker:us-west-2:858958072653:pipeline/abalonepipeline/execution/er1qkmpvq7wa','github_runid':'${{ github.run_id }}'}"
         else
            status_check=$(aws dynamodb execute-statement --statement "SELECT status FROM execution_status WHERE pipelineExecutionArn='arn:aws:sagemaker:us-west-2:858958072653:pipeline/abalonepipeline/execution/er1qkmpvq7wa'" | jq '.Items[0] .status .S')
            if [ $status_check -eq "Succeeded" ]
            then
               echo "🎉🎉Sagemaker Pipeline completed successfully 🚀🚀"
            else
               echo "Sagemaker pipleline failing with status: $status_check 🐧"
            fi
         fi
        
