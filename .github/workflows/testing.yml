name: Databricks Pipeline deployment to dev
on:
  push:
  # issue_comment:
  #   types: [created]
  workflow_dispatch:

jobs:
  training:
    name: Databricks job execution
    # if: >
    #   startsWith(github.event.comment.body, 'deploy pipeline')
    runs-on: ubuntu-latest
    outputs:
      job_id: ${{ steps.job_id.outputs.job_id }}
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v3
      - name: test
        run: |
          echo "{\"config_file_name_param\": \"config_test.txt\"}">$GITHUB_WORKSPACE/test/params.json
          cat $GITHUB_WORKSPACE/test/params.json
          cat $GITHUB_WORKSPACE/test/testing/test.json | jq --arg policy_id tatatatat@agagagag.com  '.job_clusters.new_cluster.policy_id |= $policy_id' > new.json
          cat new.json
      - id: job_id
        name: Create A Databricks Job For Training Model
        run: |
          job_id=$(curl -s -X GET "https://${{ vars.DATABRICKS_INSTANCE }}/api/2.1/jobs/list?limit=1" -H "Authorization: Bearer ${{ secrets.DATABRICKS_PAT }}" -H "Content-Type: application/json" | jq '.jobs[] | select(.settings.name == "Stock_Prediction_Training_Job_test")|.job_id')
          echo "job_id=$job_id" >> $GITHUB_ENV
          echo "job_id=$job_id" >> $GITHUB_OUTPUT
          if [ -z "$job_id" ]; then
            echo "Submitting new job to the workspace"
            echo "reset_${{ github.event.repository.name }}.json"
            echo ${{ env.job_id }}
          else
           echo "Need to reset"
          fi
